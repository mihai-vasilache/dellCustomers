buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.adarshr:gradle-test-logger-plugin:1.2.0'
        classpath 'com.netflix.nebula:gradle-lint-plugin:8.3.1'
    }
}

plugins {
    id "net.ltgt.apt" version "0.15"
    id "net.ltgt.apt-idea" version "0.15"
    id 'io.franzbecker.gradle-lombok' version '1.13'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.adarshr.test-logger'
apply from: "$rootProject.projectDir/gradle/scripts/integTest.gradle"
apply from: "$rootProject.projectDir/gradle/scripts/coverage.gradle"
apply from: "$rootProject.projectDir/gradle/scripts/swagger-codegen.gradle"

group = 'com.dell'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.9
targetCompatibility = 1.9

testlogger {
    theme 'mocha' // pick a theme - mocha, standard or plain
    showExceptions true // set to false to disable detailed failure logs
    slowThreshold 1000 // set threshold in milliseconds to highlight slow tests
    showSummary true // displays a breakdown of passes, failures and skips along with total duration
}

idea {
    module {
        inheritOutputDirs false
        outputDir sourceSets.main.output.classesDir
        testOutputDir sourceSets.test.output.classesDir
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}


ext {
    springCloudVersion = 'Finchley.RC1'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.hibernate:hibernate-core')
    compile('org.flywaydb:flyway-core')
    compile('org.postgresql:postgresql')

    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.cloud:spring-cloud-starter-openfeign')
    compileOnly('org.projectlombok:lombok')

    //swagger
    compile 'io.swagger:swagger-annotations:1.5.18'
    compile("io.springfox:springfox-swagger2:${springfoxVersion}")
    compile("io.springfox:springfox-swagger-ui:${springfoxVersion}")
    compile "org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:$oauth2Version"
    compile "org.springframework.cloud:spring-cloud-starter-openfeign"
    compile "io.github.openfeign:feign-jackson:$feignJacksonVersion"
    compile "io.github.openfeign.form:feign-form-spring:$feignFormVersion"

    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

    compile "com.google.guava:guava:25.0-jre"
    compile "commons-validator:commons-validator:1.6"

    compile "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testCompile(
            'org.springframework.boot:spring-boot-starter-test',
            'org.codehaus.groovy:groovy-all:2.4.13',
            'org.spockframework:spock-spring:1.1-groovy-2.4',
            'org.spockframework:spock-unitils:1.1-groovy-2.4',
            'org.projectlombok:lombok:1.16.20',
            'com.h2database:h2',
            "org.flywaydb.flyway-test-extensions:flyway-spring-test:${flywayTestVersion}"
    )
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

def usesJvmArgs = {
    doFirst {
        jvmArgs += ["--add-modules", 'java.xml.bind']
    }
}

integrationTest usesJvmArgs
test usesJvmArgs
bootRun usesJvmArgs

